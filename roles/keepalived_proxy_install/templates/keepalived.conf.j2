! Configuration File for keepalived

global_defs {
   notification_email {
        root@localhost          	#收件人的email地址（当keepalived出故障的时候发送给哪些用户，可以指定多个）
   }
        notification_email_from keepalived@localhost            #发件人email地址
        smtp_server 127.0.0.1           #指定smtp服务器
        smtp_connect_timeout 30         #指定链接smtp服务器超时时间间隔
        router_id LVS_PRODUCT           #负载均衡标识，可自定义，在局域网内要唯一（考虑有两个keepalived集群的时候）
        }
}


#VIP,启动多个VIP
vrrp_instance VI_1 {
        state BACKUP            #为了用不抢占的配置而设置的（两个节点都是BACKUP）
        interface em1           #虚拟ip所要绑定的网卡（真实服务的网卡）
        virtual_router_id 50    #指定VRRP实例ID，范围是0-255 （同一个keepalibved集群中各节点配置相同）
        priority 100            #要比备用节点大，且各节点不相同
        advert_int 3            #指定发送VRRP通告的间隔。单位是秒。默认1秒 两个节点设置必须一样

        #允许低优先级的机器继续成为MASTER，即使高优先级的机器已经上线。如果要使用这个功能，则初始化状态必须为BACKUP。
        nopreempt

    authentication {
        auth_type PASS          #指定认证方式。PASS简单密码认证(推荐),AH:IPSEC认证(不推荐)。
        auth_pass k18_astna        #指定认证所使用的密码。最多8位。（不是服务器密码）
    }
    virtual_ipaddress {
        #<IPADDR>/<MASK> brd <IPADDR> dev <STRING> scope <SCOPE> label <LABEL>
        #虚拟的ip要和被代理的ip在同一个网段，且该ip没有被占用
        {{vip1}}/24 dev {{e}} label {{e}}:0
        {{vip2}}/24 dev {{e}} label {{e}}:1
    }
}



#oss group1
virtual_server {{vip1}} {{port}} {
        delay_loop 6                    #健康检查时间间隔
        lb_algo rr                      #rr|wrr|lc|wlc|lblc|sh|dh：LVS调度算法
        lb_kind DR                      #NAT|DR|TUN：LVS模式。
        #persistence_timeout 360        #保持客户端的请求在这个时间段内全部发到同一个真实服务器 单位秒 默认6分钟，此处注释掉的话，相同客户端的每次请求会路由到不同的RS
        protocol TCP                    #TCP|UDP|SCTP：4层协议。

        #sorry_server #<IPADDR> <PORT>  #添加一个备用服务器。当所有的RS都故障时会访问这个地址。

{% for ip in ip_list1 %}
    real_server {{ip}} {{port}} {
        weight 1
        #inhibit_on_failure              #当服务器健康检查失败时，将其weight设置为0，而不是从Virtual Server中移除。
        HTTP_GET {
            url {
              path /
              #digest ff20ad2481f97b1754ef3e12ecd3a9cc
              status_code 200
            }
            connect_timeout 8
            nb_get_retry 3
            delay_before_retry 3
            connect_port 8057
        }
    }
    {% endfor %}
}



#oss group2
virtual_server {{vip2}} {{port}} {
        delay_loop 6
        lb_algo rr
        lb_kind DR
        #persistence_timeout 360        #保持客户端的请求在这个时间段内全部发到同一个真实服务器 单位秒 默认6分钟，此处注释掉的话，相同客户端的每次请求会路由到不同的RS
        protocol TCP

        #sorry_server #<IPADDR> <PORT>  #添加一个备用服务器。当所有的RS都故障时会访问这个地址。
{% for ip in ip_list2 %}
    real_server {{ip}} {{port}} {
        weight 1
        #inhibit_on_failure              #当服务器健康检查失败时，将其weight设置为0，而不是从Virtual Server中移除。
        HTTP_GET {
            url {
              path /
              #digest ff20ad2481f97b1754ef3e12ecd3a9cc
              status_code 200
            }
            connect_timeout 8
            nb_get_retry 3
            delay_before_retry 3
            connect_port 8057
        }
    }
    {% endfor %}

}
