input{
    file{
        type => "conv"
        path => "{{conv_file_path}}/*.csv"
        sincedb_path => "{{path_data}}/data/{{logstash_sincedb}}/dm_conv_csv_kafka_sincedb"
    }
}

filter{

    csv{
        columns => ["SourceUnitName","PeriodStartTime","PeriodEndTime","ClientIP","ServerIP","ServiceID","LineID","PipeID","VCID","InstanceType","InstanceKey1","InstanceKey2","NetUnitID","ClientDevice.Name","ClientDevice.Class","ClientDevice.Vendor","ClientDevice.Model","ClientDeviceOS.Name","ClientDeviceOS.FullVersion","ClientDeviceOS.MajorVersion","TetheringIndication","NextHopAS","DestinationAS","MonitoredServiceGroupID","RatingGroup","SessionRAT","LiveConnections","NewConnections","PacketsIn","PacketsOut","OctetsIn","OctetsOut","NetworkActivityTimeSec","RetransmittedTcpDataSegmentsIn","TotalTcpDataSegmentsIn","RetransmittedTcpDataSegmentsOut","TotalTcpDataSegmentsOut","RttEstimateExternalAvgMsec","RttEstimateExternalSumMsec","RttEstimateExternaEventsMsec","RttEstimateInternalAvgMsec","RttEstimateInternalSumMsec","RttEstimateInternaEventsMsec","MaxBandwidthKbps","MinBandwidthKbps","VoiPSessionDuration","QosDroppedPacketsIn","QosDroppedPacketsOut","QosDroppedOctetsIn","QosDroppedOctetsOut"]
        skip_header => "true"
        separator => ","

    }
}

output{
    if [type] == "conv"{
        kafka{
            bootstrap_servers => "{{conv_bootstrap_servers}}"
            topic_id => "{{conv_topic_id}}"
            codec => plain {
                         format => "%{message}"
                     }
        }
    }
}

